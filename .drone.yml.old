---
kind: pipeline
name: testing

workspace:
  base: /go
  path: src/github.com/${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}

platform:
  os: linux
  arch: amd64

steps:
  - name: vet
    pull: always
    image: golang:1.15
    commands:
      - go vet ./...

  - name: test
    pull: always
    image: golang:1.15
    commands:
      - go test -cover ./...

trigger:
  ref:
    - refs/heads/master
    - "refs/tags/**"
    - "refs/pull/**"

---
kind: pipeline
name: linux-amd64

platform:
  os: linux
  arch: amd64

steps:
  - name: build-push
    pull: always
    image: golang:1.15
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_COMMIT_SHA:0:8}" -o release/linux/amd64/drone-s3-sync'
    environment:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag

  - name: build-tag
    pull: always
    image: golang:1.15
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_TAG##v}" -o release/linux/amd64/drone-s3-sync'
    environment:
      GOOS: linux
      GOARCH: amd64
      CGO_ENABLED: 0
    when:
      event:
        - tag

  - name: executable
    pull: always
    image: golang:1.15
    commands:
      - ./release/linux/amd64/drone-s3-sync --help

  - name: dryrun
    pull: always
    image: plugins/docker:linux-amd64
    settings:
      daemon_off: false
      dockerfile: docker/Dockerfile.linux.amd64
      dry_run: true
      tags: linux-amd64
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo:
        from_secret: plugin_repo
    when:
      event:
        - pull_request

  - name: publish
    pull: always
    image: plugins/docker:linux-amd64
    settings:
      auto_tag: true
      auto_tag_suffix: linux-amd64
      daemon_off: false
      dockerfile: docker/Dockerfile.linux.amd64
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo:
        from_secret: plugin_repo
    when:
      event:
        exclude:
          - pull_request

depends_on:
  - testing

---
kind: pipeline
name: linux-arm64

platform:
  os: linux
  arch: arm64

steps:
  - name: build-push
    pull: always
    image: golang:1.15
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_COMMIT_SHA:0:8}" -o release/linux/arm64/drone-s3-sync'
    environment:
      GOOS: linux
      GOARCH: arm64
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag

  - name: build-tag
    pull: always
    image: golang:1.15
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_TAG##v}" -o release/linux/arm64/drone-s3-sync'
    environment:
      GOOS: linux
      GOARCH: arm64
      CGO_ENABLED: 0
    when:
      event:
        - tag

  - name: executable
    pull: always
    image: golang:1.15
    commands:
      - ./release/linux/arm64/drone-s3-sync --help

  - name: dryrun
    pull: always
    image: plugins/docker:linux-arm64
    settings:
      daemon_off: false
      dockerfile: docker/Dockerfile.linux.arm64
      dry_run: true
      tags: linux-arm64
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo:
        from_secret: plugin_repo
    when:
      event:
        - pull_request

  - name: publish
    pull: always
    image: plugins/docker:linux-arm64
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm64
      daemon_off: false
      dockerfile: docker/Dockerfile.linux.arm64
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo:
        from_secret: plugin_repo
    when:
      event:
        exclude:
          - pull_request

trigger:
  ref:
    - refs/heads/master
    - "refs/tags/**"
    - "refs/pull/**"

depends_on:
  - testing

---
kind: pipeline
name: linux-arm

platform:
  os: linux
  arch: arm

steps:
  - name: build-push
    pull: always
    image: golang:1.15
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_COMMIT_SHA:0:8}" -o release/linux/arm/drone-s3-sync'
    environment:
      GOOS: linux
      GOARCH: arm
      CGO_ENABLED: 0
    when:
      event:
        exclude:
          - tag

  - name: build-tag
    pull: always
    image: golang:1.15
    commands:
      - 'go build -v -ldflags "-X main.version=${DRONE_TAG##v}" -o release/linux/arm/drone-s3-sync'
    environment:
      GOOS: linux
      GOARCH: arm
      CGO_ENABLED: 0
    when:
      event:
        - tag

  - name: executable
    pull: always
    image: golang:1.15
    commands:
      - ./release/linux/arm/drone-s3-sync --help

  - name: dryrun
    pull: always
    image: plugins/docker:linux-arm
    settings:
      daemon_off: false
      dockerfile: docker/Dockerfile.linux.arm
      dry_run: true
      tags: linux-arm
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo:
        from_secret: plugin_repo
    when:
      event:
        - pull_request

  - name: publish
    pull: always
    image: plugins/docker:linux-arm
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm
      daemon_off: false
      dockerfile: docker/Dockerfile.linux.arm
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo:
        from_secret: plugin_repo
    when:
      event:
        exclude:
          - pull_request

trigger:
  ref:
    - refs/heads/master
    - "refs/tags/**"
    - "refs/pull/**"

depends_on:
  - testing

---
kind: pipeline
name: notifications

platform:
  os: linux
  arch: amd64

steps:
  - name: manifest
    pull: always
    image: plugins/manifest
    settings:
      auto_tag: true
      ignore_missing: true
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      spec: docker/manifest.tmpl

  - name: microbadger
    pull: always
    image: plugins/webhook
    settings:
      urls:
        from_secret: microbadger_url

trigger:
  ref:
    - refs/heads/master
    - "refs/tags/**"

depends_on:
  - linux-amd64
  - linux-arm64
  - linux-arm
